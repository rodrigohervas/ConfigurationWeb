@model Dictionary<string, string>
@{
    ViewData["Title"] = "Basic DB";
}

    <div class="info-row">

        <div class="info-col">

            <h2 class="configuration_info_title">Basic DB configuration loading:</h2>

            <div class="configuration_info">
                <p>

                    After loading all the configuration information from the database into the app configuration through the <code>Program</code> class, in its
                    <code>CreateWebHostBuilder().ConfigureAppConfiguration</code> method while the app is starting up, as described 
                    <a asp-controller="DB" asp-action="DBInfo">here</a>, it is available for the application to use as any other loaded configuration.
                </p>
                <p>
                    Then the configuration info can be used from anywhere in the app, by injecting a configuration (<code>IConfiguration _configuration</code>) object into the class 
                    constructor. From there the info is available to be used throughout the class.
                </p>
                <p>
                    For rendering, the configuration info is loaded here by injecting an <code>IConfiguration</code> object to the controller constructor and loading the info into a
                    <code>Dictionary<<text>string, string</text>></code> object, using the <code> _configuration.GetValue<<text>string</text>>(key))</code> method, and passing the 
                    <code>Dictionary</code> object to the view.
                </p>
            </div>

        </div>

        <div class="info-col info-col-card">

            <div class="card-size">
                <div class="card-header">
                    <h5><b>Basic DB configuration loading:</b></h5>
                </div>
                <div class="card-body">

                    @foreach (var item in Model)
                    {
                        <p class="list-group-item"><b>@item.Key: </b> @item.Value </p>
                    }

                </div>
            </div>

        </div>

    </div>